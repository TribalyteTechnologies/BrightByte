limit_req_zone $binary_remote_addr zone=one:10m rate=999999999999999999r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;
map_hash_bucket_size 262144;

client_body_buffer_size 128k;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $http_origin $origin_allowed {
    default 0;
    http://cloud.aweb.com 1;   
    http://examaple.brightbyte.com 1;
    http://localhost:8100 1;
}

map $origin_allowed $origin {
    default "";
    1 $http_origin;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
	ssl_certificate /root/secrets/certificate.crt;
	ssl_certificate_key /root/secrets/private.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers HIGH:!aNULL:!MD5;
	client_body_timeout 30s;
	client_header_timeout 30s;

	access_log /var/log/nginx/access_log combined;
    error_log /var/log/nginx/error.log warn;

	add_header 'Access-Control-Allow-Headers' 'Content-Type';
	add_header 'Access-Control-Allow-Headers' 'User-Agent';

    add_header 'Access-Control-Allow-Origin' $origin;
	
	location / {
		# First attempt to serve request as file, then as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location /ws {
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
		proxy_pass http://localhost:2201;
	}
	
	location /geth {
		proxy_pass http://localhost:2200;
	}

	location /rpc {
		# Request rate and number of connections limitation
		limit_req zone=one burst=200 nodelay;
		limit_conn addr 65535;
		# Whitelist/Blacklist
		include ./conf.d/blacklist;
		content_by_lua_block {
			ngx.req.read_body()
			local data = ngx.req.get_body_data()
			if data then
				if not (string.match(data,"eth_") or string.match(data,"net_") or string.match(data,"web3_") or string.match(data,"personal_") or string.match(data,"debug_")) then
					ngx.exit(403)
				else
					ngx.exec("@rpc_proxy")
				end
			end
		}
	}

	location @rpc_proxy {
		proxy_pass http://localhost:2200;
	}
}
